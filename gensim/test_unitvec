import logging
import unittest

import numpy as np 

from debug import unitvec 

'''
Testing edits.
If input is np.float, check that output is np.float.
If input is np.int, check that output is np.float.
'''

class TestMatutils(unittest.TestCase):
	def test_unitvec(self):
		input_vector = np.random.randint(100, size=(3, 3)).astype(np.float)
		unit_vector = unitvec(input_vector)
		if input_vector.dtype == np.int:
			assert unit_vector.dtype == np.float
		elif input_vector.dtype == np.float:
			self.assertEqual(input_vector.dtype, unit_vector.dtype)

		input_vector = np.random.randint(100, size=(3, 3)).astype(np.int)
		unit_vector = unitvec(input_vector)
		if input_vector.dtype == np.int:
			assert unit_vector.dtype == np.float
		elif input_vector.dtype == np.float:
			self.assertEqual(input_vector.dtype, unit_vector.dtype)


if __name__ == '__main__':
	logging.root.setLevel(logging.WARNING)
	unittest.main()
