name: Build wheels

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  schedule:
    - cron: '0 0 * * sun,wed'

jobs:

  linters:
    uses: ./.github/workflows/linters.yml

  build_wheels:
    needs: linters
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_ARCHS_LINUX: x86_64 aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ARCHS_WINDOWS: AMD64 x86 ARM64
          CIBW_BEFORE_BUILD: pip install numpy scipy
          CIBW_SKIP: pp* cp36-* cp37-* *-win32 *_i686 *-musllinux_*
          CIBW_TEST_COMMAND: pytest -rfxEXs --durations=20 --disable-warnings --showlocals --pyargs gensim
          CIBW_TEST_REQUIRES: pytest testfixtures mock
          CIBW_TEST_SKIP: cp38* cp39* cp310* *_aarch64 *_arm64 *_universal2

      - name: Upload wheels to s3://gensim-wheels
        #
        # Only do this if the credentials are set.
        # This means that PRs will still build wheels, but not upload them.
        # (PRs do not have access to secrets).
        #
        # The always() ensures this step runs even if a previous step fails.
        # We want to upload wheels whenever possible (even if e.g. tests failed)
        # because we don't want an innocuous test failure from blocking a release.
        #
        if: ${{ always() && env.WHEELHOUSE_UPLOADER_USERNAME && env.WHEELHOUSE_UPLOADER_SECRET }}
        run: |
          python -m pip install wheelhouse-uploader
          ls wheelhouse/*.whl
          python -m wheelhouse_uploader upload --local-folder wheelhouse/ --no-ssl-check gensim-wheels --provider S3 --no-enable-cdn
        env:
          WHEELHOUSE_UPLOADER_USERNAME: ${{ secrets.AWS_ACCESS_KEY_ID }}
          WHEELHOUSE_UPLOADER_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
